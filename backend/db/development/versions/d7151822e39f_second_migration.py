"""second migration

Revision ID: d7151822e39f
Revises: 3f3ce06b30b4
Create Date: 2024-04-21 03:00:06.226388

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd7151822e39f'
down_revision: Union[str, None] = '3f3ce06b30b4'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('award_criteria',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('value', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_award_criteria_id'), 'award_criteria', ['id'], unique=False)
    op.create_index(op.f('ix_award_criteria_type'), 'award_criteria', ['type'], unique=False)
    op.create_table('awards',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_awards_id'), 'awards', ['id'], unique=False)
    op.create_index(op.f('ix_awards_name'), 'awards', ['name'], unique=False)
    op.create_table('book_genres',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_book_genres_id'), 'book_genres', ['id'], unique=False)
    op.create_table('book_memos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('memo', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_book_memos_id'), 'book_memos', ['id'], unique=False)
    op.create_index(op.f('ix_book_memos_memo'), 'book_memos', ['memo'], unique=False)
    op.create_table('book_tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_book_tags_id'), 'book_tags', ['id'], unique=False)
    op.create_table('books',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=True),
    sa.Column('author', sa.String(), nullable=True),
    sa.Column('publisher', sa.String(), nullable=True),
    sa.Column('total_page', sa.Integer(), nullable=False),
    sa.Column('isbn_code', sa.String(length=20), nullable=True),
    sa.Column('image', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_books_author'), 'books', ['author'], unique=False)
    op.create_index(op.f('ix_books_id'), 'books', ['id'], unique=False)
    op.create_index(op.f('ix_books_publisher'), 'books', ['publisher'], unique=False)
    op.create_index(op.f('ix_books_title'), 'books', ['title'], unique=False)
    op.create_table('genres',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_genres_id'), 'genres', ['id'], unique=False)
    op.create_index(op.f('ix_genres_name'), 'genres', ['name'], unique=False)
    op.create_table('reading_sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('planned_end_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_reading_sessions_end_date'), 'reading_sessions', ['end_date'], unique=False)
    op.create_index(op.f('ix_reading_sessions_id'), 'reading_sessions', ['id'], unique=False)
    op.create_index(op.f('ix_reading_sessions_planned_end_date'), 'reading_sessions', ['planned_end_date'], unique=False)
    op.create_index(op.f('ix_reading_sessions_start_date'), 'reading_sessions', ['start_date'], unique=False)
    op.create_table('tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tags_id'), 'tags', ['id'], unique=False)
    op.create_index(op.f('ix_tags_name'), 'tags', ['name'], unique=False)
    op.create_table('user_awards',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('award_date', sa.Date(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_awards_award_date'), 'user_awards', ['award_date'], unique=False)
    op.create_index(op.f('ix_user_awards_id'), 'user_awards', ['id'], unique=False)
    op.create_table('daily_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('page_read', sa.Integer(), nullable=True),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('book_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_daily_logs_id'), 'daily_logs', ['id'], unique=False)
    op.drop_index('ix_tasks_done', table_name='tasks')
    op.drop_index('ix_tasks_id', table_name='tasks')
    op.drop_index('ix_tasks_title', table_name='tasks')
    op.drop_table('tasks')
    op.add_column('users', sa.Column('user_name', sa.String(), nullable=True))
    op.add_column('users', sa.Column('email', sa.String(), nullable=False))
    op.add_column('users', sa.Column('password', sa.String(), nullable=False))
    op.add_column('users', sa.Column('updated_at', sa.DateTime(), nullable=False))
    op.drop_index('ix_users_name', table_name='users')
    op.create_index(op.f('ix_users_user_name'), 'users', ['user_name'], unique=True)
    op.create_unique_constraint(None, 'users', ['email'])
    op.drop_column('users', 'name')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_index(op.f('ix_users_user_name'), table_name='users')
    op.create_index('ix_users_name', 'users', ['name'], unique=True)
    op.drop_column('users', 'updated_at')
    op.drop_column('users', 'password')
    op.drop_column('users', 'email')
    op.drop_column('users', 'user_name')
    op.create_table('tasks',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('done', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='tasks_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='tasks_pkey')
    )
    op.create_index('ix_tasks_title', 'tasks', ['title'], unique=False)
    op.create_index('ix_tasks_id', 'tasks', ['id'], unique=False)
    op.create_index('ix_tasks_done', 'tasks', ['done'], unique=False)
    op.drop_index(op.f('ix_daily_logs_id'), table_name='daily_logs')
    op.drop_table('daily_logs')
    op.drop_index(op.f('ix_user_awards_id'), table_name='user_awards')
    op.drop_index(op.f('ix_user_awards_award_date'), table_name='user_awards')
    op.drop_table('user_awards')
    op.drop_index(op.f('ix_tags_name'), table_name='tags')
    op.drop_index(op.f('ix_tags_id'), table_name='tags')
    op.drop_table('tags')
    op.drop_index(op.f('ix_reading_sessions_start_date'), table_name='reading_sessions')
    op.drop_index(op.f('ix_reading_sessions_planned_end_date'), table_name='reading_sessions')
    op.drop_index(op.f('ix_reading_sessions_id'), table_name='reading_sessions')
    op.drop_index(op.f('ix_reading_sessions_end_date'), table_name='reading_sessions')
    op.drop_table('reading_sessions')
    op.drop_index(op.f('ix_genres_name'), table_name='genres')
    op.drop_index(op.f('ix_genres_id'), table_name='genres')
    op.drop_table('genres')
    op.drop_index(op.f('ix_books_title'), table_name='books')
    op.drop_index(op.f('ix_books_publisher'), table_name='books')
    op.drop_index(op.f('ix_books_id'), table_name='books')
    op.drop_index(op.f('ix_books_author'), table_name='books')
    op.drop_table('books')
    op.drop_index(op.f('ix_book_tags_id'), table_name='book_tags')
    op.drop_table('book_tags')
    op.drop_index(op.f('ix_book_memos_memo'), table_name='book_memos')
    op.drop_index(op.f('ix_book_memos_id'), table_name='book_memos')
    op.drop_table('book_memos')
    op.drop_index(op.f('ix_book_genres_id'), table_name='book_genres')
    op.drop_table('book_genres')
    op.drop_index(op.f('ix_awards_name'), table_name='awards')
    op.drop_index(op.f('ix_awards_id'), table_name='awards')
    op.drop_table('awards')
    op.drop_index(op.f('ix_award_criteria_type'), table_name='award_criteria')
    op.drop_index(op.f('ix_award_criteria_id'), table_name='award_criteria')
    op.drop_table('award_criteria')
    # ### end Alembic commands ###
